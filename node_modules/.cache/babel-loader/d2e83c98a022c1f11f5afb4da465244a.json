{"ast":null,"code":"var _jsxFileName = \"/home/pinkyy/zebi/dirabk/spotyhi/src/Playlists/Playlists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Playlists.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Playlists = () => {\n  _s();\n\n  const [playlists, setPlaylists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('access_token');\n\n  const exportPlaylist = playlist => {\n    const playlistName = playlist.name;\n    const playlistTracks = playlist.tracks.href;\n    console.log(playlistName);\n    axios.get(playlistTracks, {\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => {\n      const tracks = response.data.items;\n      const trackList = tracks.map(track => {\n        return {\n          name: track.track.name,\n          artist: track.track.artists[0].name,\n          album: track.track.album.name,\n          preview: track.track.preview_url,\n          duration: track.track.duration_ms\n        };\n      });\n      const playlistData = {\n        name: playlistName,\n        tracks: trackList\n      };\n      console.log(playlistData);\n      const playlistJSON = JSON.stringify(playlistData);\n      const blob = new Blob([playlistJSON], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', playlistName + '.json');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    });\n  };\n\n  useEffect(() => {\n    if (token) {\n      axios.get('https://api.spotify.com/v1/me/playlists', {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => {\n        setPlaylists(response.data.items);\n        console.log(response.data.items);\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    }\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!playlists && !token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, this);\n  } // Create a card shaped div for each playlist\n  // Inline Style for each card \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Playlists\",\n    children: playlists.map(playlist => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: `url(${playlist.images.length ? playlist.images[0].url : ''})`\n        },\n        className: \"Playlist-cover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Playlist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Playlist-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: playlist.owner.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [playlist.tracks.total, \" tracks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => exportPlaylist(playlist),\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, playlist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Playlists, \"SA2AOzH5C36IUcyaLIEPV+RRUeE=\");\n\n_c = Playlists;\nexport default Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Playlists","playlists","setPlaylists","loading","setLoading","error","setError","token","localStorage","getItem","exportPlaylist","playlist","playlistName","name","playlistTracks","tracks","href","console","log","get","headers","then","response","data","items","trackList","map","track","artist","artists","album","preview","preview_url","duration","duration_ms","playlistData","playlistJSON","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","click","removeChild","catch","message","backgroundImage","images","length","owner","display_name","total","id"],"sources":["/home/pinkyy/zebi/dirabk/spotyhi/src/Playlists/Playlists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Playlists.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\n\n\n\n\n\n\n\n\n\n\nconst Playlists = () => {\n\n    const [playlists, setPlaylists] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const token = localStorage.getItem('access_token');\n\n\n\n\n    const exportPlaylist = (playlist) => {\n        const playlistName = playlist.name;\n        const playlistTracks = playlist.tracks.href;\n        console.log(playlistName)\n        axios.get(playlistTracks, {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }}).then(response => {\n                        const tracks = response.data.items;\n                        const trackList = tracks.map(track => {\n                            return {\n                                name: track.track.name,\n                                artist: track.track.artists[0].name,\n                                album: track.track.album.name,\n                                preview: track.track.preview_url,\n                                duration: track.track.duration_ms\n                            }\n                        })\n                        const playlistData = {\n                            name: playlistName,\n                            tracks: trackList\n                        }\n                        console.log(playlistData)\n                        const playlistJSON = JSON.stringify(playlistData)\n                        const blob = new Blob([playlistJSON], { type: 'application/json' });\n                        const url = URL.createObjectURL(blob);\n                        const link = document.createElement('a');\n                        link.href = url;\n                        link.setAttribute('download', playlistName + '.json');\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                )\n    }\n\n\n\n    useEffect(() => {\n        \n        if (token) {\n            axios.get('https://api.spotify.com/v1/me/playlists', {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            })\n            .then(response => {\n                setPlaylists(response.data.items);\n                console.log(response.data.items)\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            });\n        }\n    }\n    , [])\n\n    if (loading) {\n        return <div>Loading...</div>\n    }\n\n    if (error) {\n        return <div>Error: {error.message}</div>\n    }\n\n    if (!playlists && !token) {\n        return <div>Not logged in</div>\n    }\n\n    // Create a card shaped div for each playlist\n    // Inline Style for each card \n    \n    return (\n        <div className='Playlists'>\n            {playlists.map(playlist => {\n                return (\n                    <div  style={{backgroundImage: `url(${playlist.images.length ? playlist.images[0].url : ''})`}} className='Playlist-cover' key={playlist.id}>\n                        <div className='Playlist-image'></div>\n                        <div className='Playlist-info'>\n                            <h3>{playlist.name}</h3>\n                            <p>{playlist.owner.display_name}</p>\n                            <p>{playlist.tracks.total} tracks</p>\n                            <button onClick={() => exportPlaylist(playlist)}>Export</button>\n                        </div>\n                    </div>\n                )\n            }\n            )}\n        </div>\n    )\n}\n\nexport default Playlists;"],"mappings":"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"},"metadata":{},"sourceType":"module"}