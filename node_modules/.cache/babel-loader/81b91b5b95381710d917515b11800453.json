{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Search bar, Quiries the spotify api to find the song, album, artist, playlist, and user\n// after user insert to the search input the navbar shows a dropdown with all the results\nimport React from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useCallback } from 'react';\nimport { useMemo } from 'react';\nimport { useReducer } from 'react';\n\nconst Navbar = () => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState('');\n  const [type, setType] = useState('artist');\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\n  const [user, setUser] = useState(null);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [errorUser, setErrorUser] = useState(null);\n  const tokenRef = useRef(token);\n  tokenRef.current = token;\n  const userRef = useRef(user);\n  userRef.current = user;\n  const loadingRef = useRef(loading);\n  loadingRef.current = loading;\n  const errorRef = useRef(error);\n  errorRef.current = error;\n  const userLoadingRef = useRef(loadingUser);\n  userLoadingRef.current = loadingUser;\n  const userErrorRef = useRef(errorUser);\n  userErrorRef.current = errorUser;\n  const searchReducer = useCallback((state, action) => {\n    switch (action.type) {\n      case 'SET_SEARCH':\n        return { ...state,\n          search: action.search\n        };\n\n      case 'SET_RESULTS':\n        return { ...state,\n          results: action.results\n        };\n\n      case 'SET_LOADING':\n        return { ...state,\n          loading: action.loading\n        };\n\n      case 'SET_ERROR':\n        return { ...state,\n          error: action.error\n        };\n\n      case 'SET_QUERY':\n        return { ...state,\n          query: action.query\n        };\n\n      case 'SET_TYPE':\n        return { ...state,\n          type: action.type\n        };\n\n      default:\n        return state;\n    }\n  }, []);\n  const [state, dispatch] = useReducer(searchReducer, {\n    search: '',\n    results: [],\n    loading: false,\n    error: null,\n    query: '',\n    type: 'artist'\n  });\n}; // import { Link } from 'react-router-dom';\n// import { useState } from 'react';\n// import { useEffect } from 'react';\n// import { useRef } from 'react';\n// import { useCallback } from 'react';\n// import { useMemo } from 'react';\n// import axios from 'axios';\n// import defaultImage from './Profile.jpg';\n// const Navbar = () => {\n//     const [search, setSearch] = useState('');\n//     const [results, setResults] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState(null);\n//     const token = localStorage.getItem('access_token');\n//     const searchRef = useRef(null);\n//     const handleSubmit = useCallback(\n//         (event) => {\n//             event.preventDefault();\n//             setLoading(true);\n//             setError(null);\n//             setResults([]);\n//             axios.get(`https://api.spotify.com/v1/search?q=${search}&type=track,artist,album,playlist,user`, {\n//                 headers: {\n//                     'Authorization': 'Bearer ' + token\n//                 }\n//             })\n//                 .then(response => {\n//                     setResults(response.data.tracks.items);\n//                     setLoading(false);\n//                 })\n//                 .catch(error => {\n//                     setError(error);\n//                     setLoading(false);\n//                 });\n//         },\n//         [search, token]\n//     );\n//     useEffect(() => {\n//         if (searchRef.current) {\n//             searchRef.current.focus();\n//         }\n//     }, [searchRef]);\n//     const handleChange = useCallback(\n//         (event) => {\n//             setSearch(event.target.value);\n//         },\n//         [setSearch]\n//     );\n//     const handleKeyPress = useCallback(\n//         (event) => {\n//             if (event.key === 'Enter') {\n//                 handleSubmit(event);\n//             }\n//         },\n//         [handleSubmit]\n//     );\n//     const handleClick = useCallback(\n//         (item) => {\n//             setSearch(item.name);\n//             setResults([]);\n//         },\n//         [setSearch, setResults]\n//     );\n//     const resultsList = useMemo(\n//         () => {\n//             if (loading) {\n//                 return <div>Loading...</div>;\n//             }\n//             if (error) {\n//                 return <div>Error: {error.message}</div>;\n//             }\n//             if (results.length === 0) {\n//                 return <div>No results found</div>;\n//             }\n//             return (\n//                 <ul className=\"Navbar-results\">\n//                     {results.map(item => (\n//                         <li key={item.id} onClick={() => handleClick(item)}>\n//                             <img src={item.album.images.length ? item.album.images[0].url : defaultImage} alt={item.name} />\n//                             <div className=\"Navbar-results-info\">\n//                                 <div className=\"Navbar-results-name\">{item.name}</div>\n//                                 <div className=\"Navbar-results-type\">{item.type}</div>\n//                             </div>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             );\n//         },\n//         [loading, error, results, handleClick]\n//     );\n// }\n// export default Navbar\n\n\n_s(Navbar, \"eFX7VHfE8SM2RZytdtmlIrZTa3Q=\");\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","Link","useState","useEffect","useRef","useCallback","useMemo","useReducer","Navbar","search","setSearch","results","setResults","loading","setLoading","error","setError","query","setQuery","type","setType","token","setToken","localStorage","getItem","user","setUser","loadingUser","setLoadingUser","errorUser","setErrorUser","tokenRef","current","userRef","loadingRef","errorRef","userLoadingRef","userErrorRef","searchReducer","state","action","dispatch"],"sources":["/home/pinkyy/zebi/dirabk/spotyhi/src/Navbar/Navbar.js"],"sourcesContent":["// Search bar, Quiries the spotify api to find the song, album, artist, playlist, and user\n// after user insert to the search input the navbar shows a dropdown with all the results\n\nimport React from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useCallback } from 'react';\nimport { useMemo } from 'react';\nimport { useReducer } from 'react';\n\nconst Navbar = () => {\n    const [search, setSearch] = useState('');\n    const [results, setResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [query, setQuery] = useState('');\n    const [type, setType] = useState('artist');\n    const [token, setToken] = useState(localStorage.getItem('access_token'));\n    const [user, setUser] = useState(null);\n    const [loadingUser, setLoadingUser] = useState(true);\n    const [errorUser, setErrorUser] = useState(null);\n\n    const tokenRef = useRef(token);\n    tokenRef.current = token;\n    \n    const userRef = useRef(user);\n    userRef.current = user;\n\n    const loadingRef = useRef(loading);\n    loadingRef.current = loading;\n\n    const errorRef = useRef(error);\n    errorRef.current = error;\n\n    const userLoadingRef = useRef(loadingUser);\n    userLoadingRef.current = loadingUser;\n\n    const userErrorRef = useRef(errorUser);\n    userErrorRef.current = errorUser;\n\n    const searchReducer = useCallback((state, action) => {\n        switch (action.type) {\n            case 'SET_SEARCH':\n                return {\n                    ...state,\n                    search: action.search\n                };\n            case 'SET_RESULTS':\n                return {\n                    ...state,\n                    results: action.results\n                };\n            case 'SET_LOADING':\n                return {\n                    ...state,\n                    loading: action.loading\n                };\n            case 'SET_ERROR':\n                return {\n                    ...state,\n                    error: action.error\n                };\n            case 'SET_QUERY':\n                return {\n                    ...state,\n                    query: action.query\n                };\n            case 'SET_TYPE':\n                return {\n                    ...state,\n                    type: action.type\n                };\n            default:\n                return state;\n        }\n    }, []);\n\n    const [state, dispatch] = useReducer(searchReducer, {\n    \n        search: '',\n        results: [],\n        loading: false,\n        error: null,\n        query: '',\n        type: 'artist'\n    });\n    \n    }\n\n\n\n\n\n\n\n// import { Link } from 'react-router-dom';\n// import { useState } from 'react';\n// import { useEffect } from 'react';\n// import { useRef } from 'react';\n// import { useCallback } from 'react';\n// import { useMemo } from 'react';\n// import axios from 'axios';\n// import defaultImage from './Profile.jpg';\n// const Navbar = () => {\n    \n//     const [search, setSearch] = useState('');\n//     const [results, setResults] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState(null);\n//     const token = localStorage.getItem('access_token');\n//     const searchRef = useRef(null);\n\n//     const handleSubmit = useCallback(\n//         (event) => {\n//             event.preventDefault();\n//             setLoading(true);\n//             setError(null);\n//             setResults([]);\n//             axios.get(`https://api.spotify.com/v1/search?q=${search}&type=track,artist,album,playlist,user`, {\n//                 headers: {\n//                     'Authorization': 'Bearer ' + token\n//                 }\n//             })\n//                 .then(response => {\n//                     setResults(response.data.tracks.items);\n//                     setLoading(false);\n//                 })\n//                 .catch(error => {\n//                     setError(error);\n//                     setLoading(false);\n//                 });\n//         },\n//         [search, token]\n//     );\n\n//     useEffect(() => {\n//         if (searchRef.current) {\n//             searchRef.current.focus();\n//         }\n//     }, [searchRef]);\n\n//     const handleChange = useCallback(\n//         (event) => {\n//             setSearch(event.target.value);\n//         },\n//         [setSearch]\n//     );\n\n//     const handleKeyPress = useCallback(\n//         (event) => {\n//             if (event.key === 'Enter') {\n//                 handleSubmit(event);\n//             }\n//         },\n//         [handleSubmit]\n//     );\n\n//     const handleClick = useCallback(\n//         (item) => {\n//             setSearch(item.name);\n//             setResults([]);\n//         },\n//         [setSearch, setResults]\n//     );\n\n//     const resultsList = useMemo(\n//         () => {\n//             if (loading) {\n//                 return <div>Loading...</div>;\n//             }\n//             if (error) {\n//                 return <div>Error: {error.message}</div>;\n//             }\n//             if (results.length === 0) {\n//                 return <div>No results found</div>;\n//             }\n//             return (\n//                 <ul className=\"Navbar-results\">\n//                     {results.map(item => (\n//                         <li key={item.id} onClick={() => handleClick(item)}>\n//                             <img src={item.album.images.length ? item.album.images[0].url : defaultImage} alt={item.name} />\n//                             <div className=\"Navbar-results-info\">\n//                                 <div className=\"Navbar-results-name\">{item.name}</div>\n//                                 <div className=\"Navbar-results-type\">{item.type}</div>\n//                             </div>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             );\n//         },\n//         [loading, error, results, handleClick]\n//     );\n// }\n\n// export default Navbar"],"mappings":"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"},"metadata":{},"sourceType":"module"}